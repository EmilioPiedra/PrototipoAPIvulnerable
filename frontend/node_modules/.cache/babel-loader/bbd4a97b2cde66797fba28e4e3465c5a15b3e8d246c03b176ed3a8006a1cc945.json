{"ast":null,"code":"const API_URL = \"http://localhost:4000\"; // backend\n\nexport const login = async (usuario, password) => {\n  const res = await fetch(`${API_URL}/api/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      usuario,\n      password\n    })\n  });\n  if (!res.ok) throw new Error(\"Credenciales inv치lidas\");\n  return await res.json(); // { token: \"...\" }\n};\nexport const fetchProtectedData = async token => {\n  const res = await fetch(`${API_URL}/api/protected`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error(\"No autorizado\");\n  return await res.json();\n};\nexport const requestOtp = async usuario => {\n  const res = await fetch(`${API_URL}/api/request-otp`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      usuario\n    })\n  });\n  if (!res.ok) throw new Error(\"Error al solicitar OTP\");\n  return await res.json();\n};\nexport const verifyOtp = async ({\n  usuario,\n  otp,\n  nuevaPassword\n}) => {\n  const res = await fetch(`${API_URL}/api/verify-otp`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      usuario,\n      otp\n    })\n  });\n  if (!res.ok) throw new Error(\"Error al verificar OTP\");\n  return await res.json();\n};\nexport const changePassword = async ({\n  usuario,\n  otp,\n  nuevaPassword\n}) => {\n  const res = await fetch(`${API_URL}/api/change-password`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      usuario,\n      otp,\n      nuevaPassword\n    })\n  });\n  if (!res.ok) throw new Error(\"Error al cambiar contrase침a\");\n  return await res.json(); // { mensaje: \"...\", valido: true (opcional) }\n};\nexport const getUsers = async token => {\n  const res = await fetch(`${API_URL}/api/users`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error(\"No autorizado o usuario no encontrado\");\n  return await res.json();\n};\nexport const updateUser = async (usuario, newData, token) => {\n  const res = await fetch(`${API_URL}/api/actualizar/${usuario}`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newData)\n  });\n  if (!res.ok) throw new Error(\"Error al actualizar usuario\");\n  return await res.json();\n};\nexport const deleteUser = async (usuario, token) => {\n  const res = await fetch(`${API_URL}/api/eliminar/${usuario}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Error al eliminar usuario\");\n  return await res.json();\n};\nexport const getInventario = async token => {\n  const res = await fetch(`${API_URL}/api/inventario`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error(\"No autorizado o inventario no encontrado\");\n  return await res.json();\n};\nexport const addInventario = async (token, nuevoItem) => {\n  const res = await fetch(`${API_URL}/api/addInventario`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(nuevoItem)\n  });\n  if (!res.ok) throw new Error(\"Error al agregar producto al inventario\");\n  return await res.json();\n};\nexport const verificarAntecedentes = async (cedula, token) => {\n  const res = await fetch(`${API_URL}/api/verificar-antecedentes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      cedula\n    })\n  });\n  const data = await res.json();\n  return data;\n};\nexport const facturarCliente = async (factura, token) => {\n  const res = await fetch(`${API_URL}/api/factura`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(factura)\n  });\n  if (!res.ok) throw new Error(\"Error al generar la factura\");\n  return await res.json();\n};","map":{"version":3,"names":["API_URL","login","usuario","password","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","fetchProtectedData","token","Authorization","requestOtp","verifyOtp","otp","nuevaPassword","changePassword","getUsers","updateUser","newData","deleteUser","getInventario","addInventario","nuevoItem","verificarAntecedentes","cedula","data","facturarCliente","factura"],"sources":["C:/Users/reale/Desktop/Ataques/jwt-login-node/frontend/src/services/api.js"],"sourcesContent":["const API_URL = \"http://localhost:4000\"; // backend\r\n\r\nexport const login = async (usuario, password) => {\r\n  const res = await fetch(`${API_URL}/api/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ usuario, password }),\r\n  });\r\n  if (!res.ok) throw new Error(\"Credenciales inv치lidas\");\r\n  return await res.json(); // { token: \"...\" }\r\n};\r\n\r\nexport const fetchProtectedData = async (token) => {\r\n  const res = await fetch(`${API_URL}/api/protected`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  if (!res.ok) throw new Error(\"No autorizado\");\r\n  return await res.json();\r\n};\r\n\r\nexport const requestOtp = async (usuario) => {\r\n  const res = await fetch(`${API_URL}/api/request-otp`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ usuario }),\r\n  });\r\n  if (!res.ok) throw new Error(\"Error al solicitar OTP\");\r\n  return await res.json();\r\n};\r\n\r\nexport const verifyOtp = async ({ usuario, otp, nuevaPassword }) => {\r\n  const res = await fetch(`${API_URL}/api/verify-otp`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ usuario, otp }),\r\n  });\r\n  if (!res.ok) throw new Error(\"Error al verificar OTP\");\r\n  return await res.json();\r\n};\r\n\r\nexport const changePassword = async ({ usuario, otp, nuevaPassword }) => {\r\n  const res = await fetch(`${API_URL}/api/change-password`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ usuario, otp, nuevaPassword }),\r\n  });\r\n  if (!res.ok) throw new Error(\"Error al cambiar contrase침a\");\r\n  return await res.json(); // { mensaje: \"...\", valido: true (opcional) }\r\n};\r\n\r\nexport const getUsers = async (token) => {\r\n  const res = await fetch(`${API_URL}/api/users`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  if (!res.ok) throw new Error(\"No autorizado o usuario no encontrado\");\r\n  return await res.json();\r\n};\r\n\r\nexport const updateUser = async (usuario, newData, token) => {\r\n  const res = await fetch(`${API_URL}/api/actualizar/${usuario}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(newData),\r\n  });\r\n\r\n  if (!res.ok) throw new Error(\"Error al actualizar usuario\");\r\n\r\n  return await res.json();\r\n};\r\n\r\nexport const deleteUser = async (usuario, token) => {\r\n  const res = await fetch(`${API_URL}/api/eliminar/${usuario}`, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  if (!res.ok) throw new Error(\"Error al eliminar usuario\");\r\n  return await res.json();\r\n}\r\n\r\nexport const getInventario = async (token) => {\r\n  const res = await fetch(`${API_URL}/api/inventario`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  if (!res.ok) throw new Error(\"No autorizado o inventario no encontrado\");\r\n  return await res.json();\r\n};\r\n\r\nexport const addInventario = async (token, nuevoItem) => {\r\n  const res = await fetch(`${API_URL}/api/addInventario`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(nuevoItem),\r\n  });\r\n\r\n  if (!res.ok) throw new Error(\"Error al agregar producto al inventario\");\r\n  return await res.json();\r\n};\r\n\r\n\r\nexport const verificarAntecedentes = async (cedula, token) => {\r\n  const res = await fetch(`${API_URL}/api/verificar-antecedentes`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ cedula }),\r\n  });\r\n\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\n\r\nexport const facturarCliente = async (factura, token) => {\r\n  const res = await fetch(`${API_URL}/api/factura`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(factura)\r\n  });\r\n\r\n  if (!res.ok) throw new Error(\"Error al generar la factura\");\r\n  return await res.json();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}